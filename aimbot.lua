 pcall(function() getgenv().Aimbot.Functions:Exit() end) getgenv().Aimbot = {} local g = getgenv().Aimbot local a = game:GetService("\82\117\110\83\101\114\118\105\99\101") local j = game:GetService("\85\115\101\114\73\110\112\117\116\83\101\114\118\105\99\101") local f = game:GetService("\72\116\116\112\83\101\114\118\105\99\101") local _ = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101") local m_ = game:GetService("\83\116\97\114\116\101\114\71\117\105") local dm = game:GetService("\80\108\97\121\101\114\115") local nd = game:GetService("\87\111\114\107\115\112\97\99\101").CurrentCamera local ind = dm.LocalPlayer local pi = "\97\106\32\109\97\100\101" local lp = {"\65\105\109\98\111\116", "\67\111\110\102\105\103\117\114\97\116\105\111\110\46\106\115\111\110", "\68\114\97\119\105\110\103\46\106\115\111\110"} local kl, Running, Animation, RequiredDistance, ServiceConnections = false, false, nil, 2000, {} local tk = tk or (q and q.MouseMove) local ht = queue_on_teleport or syn.queue_on_teleport g.Settings = { SendNotifications = true, b = true,  ReloadOnTeleport = true, Enabled = true, TeamCheck = false, AliveCheck = true, WallCheck = false,  Sensitivity = 0,  ThirdPerson = false,  ThirdPersonSensitivity = 3,  TriggerKey = "\77\111\117\115\101\66\117\116\116\111\110\50", Toggle = false, LockPart = "\72\101\97\100"  } g.FOVSettings = { Enabled = true, Visible = true, Amount = 90, l = "\50\53\53\44\32\50\53\53\44\32\50\53\53", LockedColor = "\50\53\53\44\32\55\48\44\32\55\48", Transparency = 0.5, Sides = 60, Thickness = 1, Filled = false } g.FOVCircle = Drawing.new("\67\105\114\99\108\101") g.Locked = nil local function m(d) if d and type(d) == "\116\97\98\108\101" then local sh = f:JSONEncode(d) return sh end end local function n(i) if i and type(i) == "\115\116\114\105\110\103" then local bs = f:JSONDecode(i) return bs end end local function p(l) local ob = tonumber(string.match(l, "([%d]+)[%s]*,[%s]*[%d]+[%s]*,[%s]*[%d]+")) local co = tonumber(string.match(l, "[%d]+[%s]*,[%s]*([%d]+)[%s]*,[%s]*[%d]+")) local e = tonumber(string.match(l, "[%d]+[%s]*,[%s]*[%d]+[%s]*,[%s]*([%d]+)")) return Color3.fromRGB(ob, co, e) end local function k(t, h, s) if g.Settings.SendNotifications then m_:SetCore("\83\101\110\100\78\111\116\105\102\105\99\97\116\105\111\110", { pi = t, Text = h, Duration = s }) end end local function b() if g.Settings.SaveSettings then if isfile(pi.."\47"..lp[1].."\47"..lp[2]) then writefile(pi.."\47"..lp[1].."\47"..lp[2], m(g.Settings)) end if isfile(pi.."\47"..lp[1].."\47"..lp[3]) then writefile(pi.."\47"..lp[1].."\47"..lp[3], m(g.FOVSettings)) end end end local function o() if not g.Locked then if g.FOVSettings.Enabled then RequiredDistance = g.FOVSettings.Amount else RequiredDistance = 2000 end for _, v in next, dm:GetPlayers() do if v ~= ind then if v.Character and v.Character:FindFirstChild(g.Settings.LockPart) and v.Character:FindFirstChildOfClass("\72\117\109\97\110\111\105\100") then if g.Settings.TeamCheck and v.Team == ind.Team then continue end if g.Settings.AliveCheck and v.Character:FindFirstChildOfClass("\72\117\109\97\110\111\105\100").Health <= 0 then continue end if g.Settings.WallCheck and #(nd:GetPartsObscuringTarget({v.Character[g.Settings.LockPart].Position}, v.Character:GetDescendants())) > 0 then continue end local ag, OnScreen = nd:WorldToViewportPoint(v.Character[g.Settings.LockPart].Position) local gq = (Vector2.new(j:GetMouseLocation().X, j:GetMouseLocation().Y) - Vector2.new(ag.X, ag.Y)).Magnitude if gq < RequiredDistance and OnScreen then RequiredDistance = gq g.Locked = v end end end end elseif (Vector2.new(j:GetMouseLocation().X, j:GetMouseLocation().Y) - Vector2.new(nd:WorldToViewportPoint(g.Locked.Character[g.Settings.LockPart].Position).X, nd:WorldToViewportPoint(g.Locked.Character[g.Settings.LockPart].Position).Y)).Magnitude > RequiredDistance then g.Locked = nil Animation:Cancel() g.FOVCircle.Color = p(g.FOVSettings.Color) end end ServiceConnections.TypingStartedConnection = j.TextBoxFocused:Connect(function() kl = true end) ServiceConnections.TypingEndedConnection = j.TextBoxFocusReleased:Connect(function() kl = false end) if g.Settings.SaveSettings then if not isfolder(pi) then makefolder(pi) end if not isfolder(pi.."\47"..lp[1]) then makefolder(pi.."\47"..lp[1]) end if not isfile(pi.."\47"..lp[1].."\47"..lp[2]) then writefile(pi.."\47"..lp[1].."\47"..lp[2], m(g.Settings)) else g.Settings = n(readfile(pi.."\47"..lp[1].."\47"..lp[2])) end if not isfile(pi.."\47"..lp[1].."\47"..lp[3]) then writefile(pi.."\47"..lp[1].."\47"..lp[3], m(g.FOVSettings)) else g.Visuals = n(readfile(pi.."\47"..lp[1].."\47"..lp[3])) end coroutine.wrap(function() while wait(10) and g.Settings.SaveSettings do b() end end)() else if isfolder(pi) then delfolder(pi) end end local function c() ServiceConnections.RenderSteppedConnection = a.RenderStepped:Connect(function() if g.FOVSettings.Enabled and g.Settings.Enabled then g.FOVCircle.Radius = g.FOVSettings.Amount g.FOVCircle.Thickness = g.FOVSettings.Thickness g.FOVCircle.Filled = g.FOVSettings.Filled g.FOVCircle.NumSides = g.FOVSettings.Sides g.FOVCircle.Color = p(g.FOVSettings.Color) g.FOVCircle.Transparency = g.FOVSettings.Transparency g.FOVCircle.Visible = g.FOVSettings.Visible g.FOVCircle.Position = Vector2.new(j:GetMouseLocation().X, j:GetMouseLocation().Y) else g.FOVCircle.Visible = false end if Running and g.Settings.Enabled then o() if g.Settings.ThirdPerson then g.Settings.ThirdPersonSensitivity = math.clamp(g.Settings.ThirdPersonSensitivity, 0.1, 5) local ag = nd:WorldToViewportPoint(g.Locked.Character[g.Settings.LockPart].Position) tk((ag.X - j:GetMouseLocation().X) * g.Settings.ThirdPersonSensitivity, (ag.Y - j:GetMouseLocation().Y) * g.Settings.ThirdPersonSensitivity) else if g.Settings.Sensitivity > 0 then Animation = _:Create(nd, TweenInfo.new(g.Settings.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(nd.CFrame.Position, g.Locked.Character[g.Settings.LockPart].Position)}) Animation:Play() else nd.CFrame = CFrame.new(nd.CFrame.Position, g.Locked.Character[g.Settings.LockPart].Position) end end g.FOVCircle.Color = p(g.FOVSettings.LockedColor) end end) ServiceConnections.InputBeganConnection = j.InputBegan:Connect(function(q) if not kl then pcall(function() if q.KeyCode == Enum.KeyCode[g.Settings.TriggerKey] then if g.Settings.Toggle then Running = not Running if not Running then g.Locked = nil Animation:Cancel() g.FOVCircle.Color = p(g.FOVSettings.Color) end else Running = true end end end) pcall(function() if q.UserInputType == Enum.UserInputType[g.Settings.TriggerKey] then if g.Settings.Toggle then Running = not Running if not Running then g.Locked = nil Animation:Cancel() g.FOVCircle.Color = p(g.FOVSettings.Color) end else Running = true end end end) end end) ServiceConnections.InputEndedConnection = j.InputEnded:Connect(function(q) if not kl then pcall(function() if q.KeyCode == Enum.KeyCode[g.Settings.TriggerKey] then if not g.Settings.Toggle then Running = false g.Locked = nil Animation:Cancel() g.FOVCircle.Color = p(g.FOVSettings.Color) end end end) pcall(function() if q.UserInputType == Enum.UserInputType[g.Settings.TriggerKey] then if not g.Settings.Toggle then Running = false g.Locked = nil Animation:Cancel() g.FOVCircle.Color = p(g.FOVSettings.Color) end end end) end end) end g.Functions = {} function g.Functions:Exit() b() for _, v in next, ServiceConnections do v:Disconnect() end if g.FOVCircle.Remove then g.FOVCircle:Remove() end getgenv().Aimbot.Functions = nil getgenv().Aimbot = nil end function g.Functions:Restart() b() for _, v in next, ServiceConnections do v:Disconnect() end c() end function g.Functions:ResetSettings() g.Settings = { SendNotifications = true, b = true,  ReloadOnTeleport = true, Enabled = true, TeamCheck = false, AliveCheck = true, WallCheck = false, Sensitivity = 0,  ThirdPerson = false, ThirdPersonSensitivity = 3, TriggerKey = "\77\111\117\115\101\66\117\116\116\111\110\50", Toggle = false, LockPart = "\72\101\97\100"  } g.FOVSettings = { Enabled = true, Visible = true, Amount = 90, l = "\50\53\53\44\32\50\53\53\44\32\50\53\53", LockedColor = "\50\53\53\44\32\55\48\44\32\55\48", Transparency = 0.5, Sides = 60, Thickness = 1, Filled = false } end if not Drawing or not getgenv then k(pi, "\89\111\117\114\32\101\120\112\108\111\105\116\32\100\111\101\115\32\110\111\116\32\115\117\112\112\111\114\116\32\116\104\105\115\32\115\99\114\105\112\116", 3); return end if g.Settings.ReloadOnTeleport then if ht then ht(game:HttpGet()) else k(pi, "Your exploit does not support \"syn.queue_on_teleport()\"") end end c(); k(pi, "\65\105\109\98\111\116\32\67\114\101\97\116\101\100\32\98\121\32\99\111\108\100", 5)
